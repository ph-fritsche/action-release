name: Build

on:
  push:

jobs:

  build: # to work as an action out of the box the ncc-build must be committed
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
    - run: yarn install --frozen-lockfile
    - run: yarn build

    - run: git add -f dist-ncc

    - name: Commit build if it changed
      run: >
        git diff --staged --quiet
        || (git config user.name "${GITHUB_ACTOR}"
        && git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        && git commit -m "build: autoupdate"
        && echo "buildCommit=$(git rev-parse HEAD)" >>$GITHUB_ENV)

    - if: env.buildCommit # skip if the build adds nothing new
      name: Push build branch
      run: git push -f origin HEAD:build

    outputs:
      buildCommit: ${{ env.buildCommit }}

  verify:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.buildCommit
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ needs.build.outputs.buildCommit }}
    - uses: ./
      with:
        dry: true
        debug: true
    - id: helper
      uses: ph-fritsche/action-helper@master
    - name: Push back to original branch
      run: |
        git fetch --depth=2 origin ${{ needs.build.outputs.buildCommit }}
        git log --format=oneline -n2 ${{ needs.build.outputs.buildCommit }}
        git push -v origin ${{ needs.build.outputs.buildCommit }}:${{ steps.helper.outputs.branchName }}

  release:
    needs: [build, verify]
    if: contains('refs/heads/master,refs/heads/beta,refs/heads/next,refs/heads/alpha', github.ref)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: | # make sure the ref points to the buildCommit
        if [ $(git rev-parse HEAD) != "foo" ]; then
          echo "::error ::HEAD moved to $(git rev-parse HEAD) - expected ${{ needs.build.outputs.buildCommit }}"
          exit 1
        fi
    - uses: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
